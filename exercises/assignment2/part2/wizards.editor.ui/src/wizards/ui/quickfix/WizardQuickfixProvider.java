/*
 * generated by Xtext 2.28.0
 */
package wizards.ui.quickfix;


import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.*;
import org.eclipse.xtext.ui.editor.quickfix.*;
import org.eclipse.xtext.validation.Issue;

import wizards.Button;
import wizards.NavigatorButton;
import wizards.validation.WizardValidator;

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
public class WizardQuickfixProvider extends DefaultQuickfixProvider {
	
	@Fix(WizardValidator.EMPTY_LABEL_WRN)
	public void generateComponentLabel(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Generate name",
				"Generates 'ComponentType {Index}' name",
				"icon.png",
				new IModification() {
					public void apply (IModificationContext context) throws Exception {
						IXtextDocument xtextDocument = context.getXtextDocument();
						int offsetToAtSign = issue.getUriToProblem().toString().lastIndexOf('@');
						String namedComponent = "'" + issue.getUriToProblem().toString().substring(offsetToAtSign + 1) + "'";
						xtextDocument.replace(issue.getOffset(), issue.getLength(), namedComponent);
					}
				}
		);
	}
	
	@Fix(WizardValidator.NO_ALTER_PAGE_ERR)
	public void generateDefaultAlterPage(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Generate alternate destination page",
				"Put the same page on alterDstPage than on dstPage",
				"icon.png",
				(EObject element, IModificationContext context) -> {
					((NavigatorButton)element).setAlterDstPage(((NavigatorButton)element).getDstPage());
				}
		);
	}
	
	@Fix(WizardValidator.SELF_LOOP_DST_ERR)
	public void fixDestSelfLoop(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Delete destination page",
				"Remove destination page so it doesn't match with current page",
				"icon.png",
				(EObject element, IModificationContext context) -> {
					((NavigatorButton)element).setDstPage(null);
				}
		);
	}
	
	@Fix(WizardValidator.SELF_LOOP_ALTER_DST_ERR)
	public void fixAlterSelfLoop(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Delete alternate destination page",
				"Remove alternate destination page so it doesn't match with current page",
				"icon.png",
				(EObject element, IModificationContext context) -> {
					((NavigatorButton)element).setAlterDstPage(null);
				}
		);
	}
	
//	@Fix(WizardValidator.MAX_BUTTON_LABEL_LENGTH_ERR)
//	public void trimButtonLabel(final Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(
//				issue,
//				"Trim button label",
//				"Remove blank spaces of button label to try to reduce length",
//				"icon.png",
//				(EObject element, IModificationContext context) -> {
//					((Button)element).setLabel(((Button)element).getLabel().trim());
//				}
//		);
//	}
	
	@Fix(WizardValidator.MAX_BUTTON_LABEL_LENGTH_ERR)
	public void cutButtonLabel(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Cut button label",
				"Remove label characters above last that fits",
				"icon.png",
				(EObject element, IModificationContext context) -> {
					Button button = (Button)element;
					String cutLabel = button.getLabel().substring(0, WizardValidator.MAX_BUTTON_LABEL_LENGTH);
					System.out.println(cutLabel);
					button.setLabel(cutLabel);
				}
		);
	}
	
	@Fix(WizardValidator.MAX_BUTTON_LABEL_LENGTH_ERR)
	public void trimButtonLength(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(
				issue,
				"Empty label",
				"Remove label and set it to empty, then apply default action to that case",
				"icon.png",
				(EObject element, IModificationContext context) -> {
					((Button)element).setLabel("");
				}
		);
	}
	
}
