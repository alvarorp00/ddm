/**
 * generated by Xtext 2.28.0
 */
package wizards.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import wizards.CheckBox;
import wizards.CloseButton;
import wizards.NavigatorButton;
import wizards.Page;
import wizards.PopUpButton;
import wizards.ReturnButton;
import wizards.TextField;
import wizards.Wizard;
import wizards.services.WizardGrammarAccess;

@SuppressWarnings("all")
public class WizardFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private WizardGrammarAccess _wizardGrammarAccess;

  protected void _format(final Wizard wizard, @Extension final IFormattableDocument document) {
    EList<Page> _pages = wizard.getPages();
    for (final Page page : _pages) {
      document.<Page>format(page);
    }
  }

  protected void _format(final Page page, @Extension final IFormattableDocument document) {
    document.<CheckBox>format(page.getCheckBox());
    EList<TextField> _textFields = page.getTextFields();
    for (final TextField textField : _textFields) {
      document.<TextField>format(textField);
    }
    EList<ReturnButton> _returnButtons = page.getReturnButtons();
    for (final ReturnButton returnButton : _returnButtons) {
      document.<ReturnButton>format(returnButton);
    }
    EList<NavigatorButton> _navigatorButtons = page.getNavigatorButtons();
    for (final NavigatorButton navigatorButton : _navigatorButtons) {
      document.<NavigatorButton>format(navigatorButton);
    }
    EList<PopUpButton> _popUpButtons = page.getPopUpButtons();
    for (final PopUpButton popUpButton : _popUpButtons) {
      document.<PopUpButton>format(popUpButton);
    }
    EList<CloseButton> _closeButtons = page.getCloseButtons();
    for (final CloseButton closeButton : _closeButtons) {
      document.<CloseButton>format(closeButton);
    }
  }

  public void format(final Object page, final IFormattableDocument document) {
    if (page instanceof XtextResource) {
      _format((XtextResource)page, document);
      return;
    } else if (page instanceof Page) {
      _format((Page)page, document);
      return;
    } else if (page instanceof Wizard) {
      _format((Wizard)page, document);
      return;
    } else if (page instanceof EObject) {
      _format((EObject)page, document);
      return;
    } else if (page == null) {
      _format((Void)null, document);
      return;
    } else if (page != null) {
      _format(page, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(page, document).toString());
    }
  }
}
