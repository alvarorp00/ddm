/*
 * generated by Xtext 2.28.0
 */
package wizards.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class WizardGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class WizardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.Wizard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWizardAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleEStringParserRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Assignment cInitial_pageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cInitial_pagePageCrossReference_2_0 = (CrossReference)cInitial_pageAssignment_2.eContents().get(0);
		private final RuleCall cInitial_pagePageEStringParserRuleCall_2_0_1 = (RuleCall)cInitial_pagePageCrossReference_2_0.eContents().get(1);
		private final Keyword cPagesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cPagesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cPagesPageParserRuleCall_4_0_0 = (RuleCall)cPagesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cPagesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cPagesPageParserRuleCall_4_1_1_0 = (RuleCall)cPagesAssignment_4_1_1.eContents().get(0);
		
		//Wizard returns Wizard: {Wizard}
		//    title=EString
		//    initial_page=[Page|EString]
		//    'Pages:' (pages+=Page ("," pages+=Page)*)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Wizard}
		//   title=EString
		//   initial_page=[Page|EString]
		//   'Pages:' (pages+=Page ("," pages+=Page)*)?
		public Group getGroup() { return cGroup; }
		
		//{Wizard}
		public Action getWizardAction_0() { return cWizardAction_0; }
		
		//title=EString
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }
		
		//EString
		public RuleCall getTitleEStringParserRuleCall_1_0() { return cTitleEStringParserRuleCall_1_0; }
		
		//initial_page=[Page|EString]
		public Assignment getInitial_pageAssignment_2() { return cInitial_pageAssignment_2; }
		
		//[Page|EString]
		public CrossReference getInitial_pagePageCrossReference_2_0() { return cInitial_pagePageCrossReference_2_0; }
		
		//EString
		public RuleCall getInitial_pagePageEStringParserRuleCall_2_0_1() { return cInitial_pagePageEStringParserRuleCall_2_0_1; }
		
		//'Pages:'
		public Keyword getPagesKeyword_3() { return cPagesKeyword_3; }
		
		//(pages+=Page ("," pages+=Page)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//pages+=Page
		public Assignment getPagesAssignment_4_0() { return cPagesAssignment_4_0; }
		
		//Page
		public RuleCall getPagesPageParserRuleCall_4_0_0() { return cPagesPageParserRuleCall_4_0_0; }
		
		//("," pages+=Page)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//pages+=Page
		public Assignment getPagesAssignment_4_1_1() { return cPagesAssignment_4_1_1; }
		
		//Page
		public RuleCall getPagesPageParserRuleCall_4_1_1_0() { return cPagesPageParserRuleCall_4_1_1_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class PageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.Page");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCheckBoxAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCheckBoxCheckBoxParserRuleCall_2_0 = (RuleCall)cCheckBoxAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextFieldsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextFieldsTextFieldParserRuleCall_3_1_0 = (RuleCall)cTextFieldsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cTextFieldsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cTextFieldsTextFieldParserRuleCall_3_2_1_0 = (RuleCall)cTextFieldsAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReturnButtonsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cReturnButtonsReturnButtonParserRuleCall_4_1_0 = (RuleCall)cReturnButtonsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cReturnButtonsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cReturnButtonsReturnButtonParserRuleCall_4_2_1_0 = (RuleCall)cReturnButtonsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNavigatorButtonsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNavigatorButtonsNavigatorButtonParserRuleCall_5_1_0 = (RuleCall)cNavigatorButtonsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cNavigatorButtonsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cNavigatorButtonsNavigatorButtonParserRuleCall_5_2_1_0 = (RuleCall)cNavigatorButtonsAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPopUpButtonsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPopUpButtonsPopUpButtonParserRuleCall_6_1_0 = (RuleCall)cPopUpButtonsAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cPopUpButtonsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cPopUpButtonsPopUpButtonParserRuleCall_6_2_1_0 = (RuleCall)cPopUpButtonsAssignment_6_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cCloseButtonsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cCloseButtonsCloseButtonParserRuleCall_7_1_0 = (RuleCall)cCloseButtonsAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cCloseButtonsAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cCloseButtonsCloseButtonParserRuleCall_7_2_1_0 = (RuleCall)cCloseButtonsAssignment_7_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Page returns Page:
		//    name=EString
		//    '{'
		//        (checkBox=CheckBox)?
		//        ('{' textFields+=TextField ("," textFields+=TextField)* '}')?
		//        ('{' returnButtons+=ReturnButton ("," returnButtons+=ReturnButton)* '}')?
		//        ('{' navigatorButtons+=NavigatorButton ("," navigatorButtons+=NavigatorButton)* '}')?
		//        ('{' popUpButtons+=PopUpButton ("," popUpButtons+=PopUpButton)* '}')?
		//        ('{' closeButtons+=CloseButton ("," closeButtons+=CloseButton)* '}')?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		//'{'
		//    (checkBox=CheckBox)?
		//    ('{' textFields+=TextField ("," textFields+=TextField)* '}')?
		//    ('{' returnButtons+=ReturnButton ("," returnButtons+=ReturnButton)* '}')?
		//    ('{' navigatorButtons+=NavigatorButton ("," navigatorButtons+=NavigatorButton)* '}')?
		//    ('{' popUpButtons+=PopUpButton ("," popUpButtons+=PopUpButton)* '}')?
		//    ('{' closeButtons+=CloseButton ("," closeButtons+=CloseButton)* '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(checkBox=CheckBox)?
		public Assignment getCheckBoxAssignment_2() { return cCheckBoxAssignment_2; }
		
		//CheckBox
		public RuleCall getCheckBoxCheckBoxParserRuleCall_2_0() { return cCheckBoxCheckBoxParserRuleCall_2_0; }
		
		//('{' textFields+=TextField ("," textFields+=TextField)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//textFields+=TextField
		public Assignment getTextFieldsAssignment_3_1() { return cTextFieldsAssignment_3_1; }
		
		//TextField
		public RuleCall getTextFieldsTextFieldParserRuleCall_3_1_0() { return cTextFieldsTextFieldParserRuleCall_3_1_0; }
		
		//("," textFields+=TextField)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//textFields+=TextField
		public Assignment getTextFieldsAssignment_3_2_1() { return cTextFieldsAssignment_3_2_1; }
		
		//TextField
		public RuleCall getTextFieldsTextFieldParserRuleCall_3_2_1_0() { return cTextFieldsTextFieldParserRuleCall_3_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
		
		//('{' returnButtons+=ReturnButton ("," returnButtons+=ReturnButton)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//returnButtons+=ReturnButton
		public Assignment getReturnButtonsAssignment_4_1() { return cReturnButtonsAssignment_4_1; }
		
		//ReturnButton
		public RuleCall getReturnButtonsReturnButtonParserRuleCall_4_1_0() { return cReturnButtonsReturnButtonParserRuleCall_4_1_0; }
		
		//("," returnButtons+=ReturnButton)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//returnButtons+=ReturnButton
		public Assignment getReturnButtonsAssignment_4_2_1() { return cReturnButtonsAssignment_4_2_1; }
		
		//ReturnButton
		public RuleCall getReturnButtonsReturnButtonParserRuleCall_4_2_1_0() { return cReturnButtonsReturnButtonParserRuleCall_4_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
		
		//('{' navigatorButtons+=NavigatorButton ("," navigatorButtons+=NavigatorButton)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }
		
		//navigatorButtons+=NavigatorButton
		public Assignment getNavigatorButtonsAssignment_5_1() { return cNavigatorButtonsAssignment_5_1; }
		
		//NavigatorButton
		public RuleCall getNavigatorButtonsNavigatorButtonParserRuleCall_5_1_0() { return cNavigatorButtonsNavigatorButtonParserRuleCall_5_1_0; }
		
		//("," navigatorButtons+=NavigatorButton)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//navigatorButtons+=NavigatorButton
		public Assignment getNavigatorButtonsAssignment_5_2_1() { return cNavigatorButtonsAssignment_5_2_1; }
		
		//NavigatorButton
		public RuleCall getNavigatorButtonsNavigatorButtonParserRuleCall_5_2_1_0() { return cNavigatorButtonsNavigatorButtonParserRuleCall_5_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
		
		//('{' popUpButtons+=PopUpButton ("," popUpButtons+=PopUpButton)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_0() { return cLeftCurlyBracketKeyword_6_0; }
		
		//popUpButtons+=PopUpButton
		public Assignment getPopUpButtonsAssignment_6_1() { return cPopUpButtonsAssignment_6_1; }
		
		//PopUpButton
		public RuleCall getPopUpButtonsPopUpButtonParserRuleCall_6_1_0() { return cPopUpButtonsPopUpButtonParserRuleCall_6_1_0; }
		
		//("," popUpButtons+=PopUpButton)*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//popUpButtons+=PopUpButton
		public Assignment getPopUpButtonsAssignment_6_2_1() { return cPopUpButtonsAssignment_6_2_1; }
		
		//PopUpButton
		public RuleCall getPopUpButtonsPopUpButtonParserRuleCall_6_2_1_0() { return cPopUpButtonsPopUpButtonParserRuleCall_6_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }
		
		//('{' closeButtons+=CloseButton ("," closeButtons+=CloseButton)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_0() { return cLeftCurlyBracketKeyword_7_0; }
		
		//closeButtons+=CloseButton
		public Assignment getCloseButtonsAssignment_7_1() { return cCloseButtonsAssignment_7_1; }
		
		//CloseButton
		public RuleCall getCloseButtonsCloseButtonParserRuleCall_7_1_0() { return cCloseButtonsCloseButtonParserRuleCall_7_1_0; }
		
		//("," closeButtons+=CloseButton)*
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }
		
		//closeButtons+=CloseButton
		public Assignment getCloseButtonsAssignment_7_2_1() { return cCloseButtonsAssignment_7_2_1; }
		
		//CloseButton
		public RuleCall getCloseButtonsCloseButtonParserRuleCall_7_2_1_0() { return cCloseButtonsCloseButtonParserRuleCall_7_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class TextFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.TextField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextFieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cMin_lengthAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMin_lengthEIntParserRuleCall_2_0 = (RuleCall)cMin_lengthAssignment_2.eContents().get(0);
		private final Assignment cMax_lengthAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMax_lengthEIntParserRuleCall_3_0 = (RuleCall)cMax_lengthAssignment_3.eContents().get(0);
		
		//TextField returns TextField:
		//    'TextField' label=EString (min_length=EInt)? (max_length=EInt)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'TextField' label=EString (min_length=EInt)? (max_length=EInt)?
		public Group getGroup() { return cGroup; }
		
		//'TextField'
		public Keyword getTextFieldKeyword_0() { return cTextFieldKeyword_0; }
		
		//label=EString
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_0() { return cLabelEStringParserRuleCall_1_0; }
		
		//(min_length=EInt)?
		public Assignment getMin_lengthAssignment_2() { return cMin_lengthAssignment_2; }
		
		//EInt
		public RuleCall getMin_lengthEIntParserRuleCall_2_0() { return cMin_lengthEIntParserRuleCall_2_0; }
		
		//(max_length=EInt)?
		public Assignment getMax_lengthAssignment_3() { return cMax_lengthAssignment_3; }
		
		//EInt
		public RuleCall getMax_lengthEIntParserRuleCall_3_0() { return cMax_lengthEIntParserRuleCall_3_0; }
	}
	public class CheckBoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.CheckBox");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheckBoxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSelectedAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSelectedEBooleanParserRuleCall_1_0 = (RuleCall)cSelectedAssignment_1.eContents().get(0);
		private final Assignment cLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLabelEStringParserRuleCall_2_0 = (RuleCall)cLabelAssignment_2.eContents().get(0);
		
		//CheckBox returns CheckBox:
		//    'CheckBox' selected=EBoolean label=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'CheckBox' selected=EBoolean label=EString
		public Group getGroup() { return cGroup; }
		
		//'CheckBox'
		public Keyword getCheckBoxKeyword_0() { return cCheckBoxKeyword_0; }
		
		//selected=EBoolean
		public Assignment getSelectedAssignment_1() { return cSelectedAssignment_1; }
		
		//EBoolean
		public RuleCall getSelectedEBooleanParserRuleCall_1_0() { return cSelectedEBooleanParserRuleCall_1_0; }
		
		//label=EString
		public Assignment getLabelAssignment_2() { return cLabelAssignment_2; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_2_0() { return cLabelEStringParserRuleCall_2_0; }
	}
	public class ReturnButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.ReturnButton");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReturnButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cCurrentPageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cCurrentPagePageCrossReference_2_0 = (CrossReference)cCurrentPageAssignment_2.eContents().get(0);
		private final RuleCall cCurrentPagePageEStringParserRuleCall_2_0_1 = (RuleCall)cCurrentPagePageCrossReference_2_0.eContents().get(1);
		private final Assignment cSrcPageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSrcPagePageCrossReference_3_0 = (CrossReference)cSrcPageAssignment_3.eContents().get(0);
		private final RuleCall cSrcPagePageEStringParserRuleCall_3_0_1 = (RuleCall)cSrcPagePageCrossReference_3_0.eContents().get(1);
		
		//ReturnButton returns ReturnButton:
		//    'ReturnButton' label=EString currentPage=[Page|EString] srcPage=[Page|EString]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ReturnButton' label=EString currentPage=[Page|EString] srcPage=[Page|EString]
		public Group getGroup() { return cGroup; }
		
		//'ReturnButton'
		public Keyword getReturnButtonKeyword_0() { return cReturnButtonKeyword_0; }
		
		//label=EString
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_0() { return cLabelEStringParserRuleCall_1_0; }
		
		//currentPage=[Page|EString]
		public Assignment getCurrentPageAssignment_2() { return cCurrentPageAssignment_2; }
		
		//[Page|EString]
		public CrossReference getCurrentPagePageCrossReference_2_0() { return cCurrentPagePageCrossReference_2_0; }
		
		//EString
		public RuleCall getCurrentPagePageEStringParserRuleCall_2_0_1() { return cCurrentPagePageEStringParserRuleCall_2_0_1; }
		
		//srcPage=[Page|EString]
		public Assignment getSrcPageAssignment_3() { return cSrcPageAssignment_3; }
		
		//[Page|EString]
		public CrossReference getSrcPagePageCrossReference_3_0() { return cSrcPagePageCrossReference_3_0; }
		
		//EString
		public RuleCall getSrcPagePageEStringParserRuleCall_3_0_1() { return cSrcPagePageEStringParserRuleCall_3_0_1; }
	}
	public class NavigatorButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.NavigatorButton");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNavigatorButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cCurrentPageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cCurrentPagePageCrossReference_2_0 = (CrossReference)cCurrentPageAssignment_2.eContents().get(0);
		private final RuleCall cCurrentPagePageEStringParserRuleCall_2_0_1 = (RuleCall)cCurrentPagePageCrossReference_2_0.eContents().get(1);
		private final Assignment cDstPageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDstPagePageCrossReference_3_0 = (CrossReference)cDstPageAssignment_3.eContents().get(0);
		private final RuleCall cDstPagePageEStringParserRuleCall_3_0_1 = (RuleCall)cDstPagePageCrossReference_3_0.eContents().get(1);
		private final Assignment cAlterDstPageAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAlterDstPagePageCrossReference_4_0 = (CrossReference)cAlterDstPageAssignment_4.eContents().get(0);
		private final RuleCall cAlterDstPagePageEStringParserRuleCall_4_0_1 = (RuleCall)cAlterDstPagePageCrossReference_4_0.eContents().get(1);
		
		//NavigatorButton returns NavigatorButton:
		//    'NavigatorButton' label=EString currentPage=[Page|EString] dstPage=[Page|EString] (alterDstPage=[Page|EString])?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'NavigatorButton' label=EString currentPage=[Page|EString] dstPage=[Page|EString] (alterDstPage=[Page|EString])?
		public Group getGroup() { return cGroup; }
		
		//'NavigatorButton'
		public Keyword getNavigatorButtonKeyword_0() { return cNavigatorButtonKeyword_0; }
		
		//label=EString
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_0() { return cLabelEStringParserRuleCall_1_0; }
		
		//currentPage=[Page|EString]
		public Assignment getCurrentPageAssignment_2() { return cCurrentPageAssignment_2; }
		
		//[Page|EString]
		public CrossReference getCurrentPagePageCrossReference_2_0() { return cCurrentPagePageCrossReference_2_0; }
		
		//EString
		public RuleCall getCurrentPagePageEStringParserRuleCall_2_0_1() { return cCurrentPagePageEStringParserRuleCall_2_0_1; }
		
		//dstPage=[Page|EString]
		public Assignment getDstPageAssignment_3() { return cDstPageAssignment_3; }
		
		//[Page|EString]
		public CrossReference getDstPagePageCrossReference_3_0() { return cDstPagePageCrossReference_3_0; }
		
		//EString
		public RuleCall getDstPagePageEStringParserRuleCall_3_0_1() { return cDstPagePageEStringParserRuleCall_3_0_1; }
		
		//(alterDstPage=[Page|EString])?
		public Assignment getAlterDstPageAssignment_4() { return cAlterDstPageAssignment_4; }
		
		//[Page|EString]
		public CrossReference getAlterDstPagePageCrossReference_4_0() { return cAlterDstPagePageCrossReference_4_0; }
		
		//EString
		public RuleCall getAlterDstPagePageEStringParserRuleCall_4_0_1() { return cAlterDstPagePageEStringParserRuleCall_4_0_1; }
	}
	public class PopUpButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.PopUpButton");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPopUpButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cPopUpAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPopUpEStringParserRuleCall_2_0 = (RuleCall)cPopUpAssignment_2.eContents().get(0);
		private final Assignment cCurrentPageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cCurrentPagePageCrossReference_3_0 = (CrossReference)cCurrentPageAssignment_3.eContents().get(0);
		private final RuleCall cCurrentPagePageEStringParserRuleCall_3_0_1 = (RuleCall)cCurrentPagePageCrossReference_3_0.eContents().get(1);
		
		//PopUpButton returns PopUpButton:
		//    'PopUpButton' label=EString popUp=EString currentPage=[Page|EString]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'PopUpButton' label=EString popUp=EString currentPage=[Page|EString]
		public Group getGroup() { return cGroup; }
		
		//'PopUpButton'
		public Keyword getPopUpButtonKeyword_0() { return cPopUpButtonKeyword_0; }
		
		//label=EString
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_0() { return cLabelEStringParserRuleCall_1_0; }
		
		//popUp=EString
		public Assignment getPopUpAssignment_2() { return cPopUpAssignment_2; }
		
		//EString
		public RuleCall getPopUpEStringParserRuleCall_2_0() { return cPopUpEStringParserRuleCall_2_0; }
		
		//currentPage=[Page|EString]
		public Assignment getCurrentPageAssignment_3() { return cCurrentPageAssignment_3; }
		
		//[Page|EString]
		public CrossReference getCurrentPagePageCrossReference_3_0() { return cCurrentPagePageCrossReference_3_0; }
		
		//EString
		public RuleCall getCurrentPagePageEStringParserRuleCall_3_0_1() { return cCurrentPagePageEStringParserRuleCall_3_0_1; }
	}
	public class CloseButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.CloseButton");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCloseButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelEStringParserRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cCurrentPageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cCurrentPagePageCrossReference_2_0 = (CrossReference)cCurrentPageAssignment_2.eContents().get(0);
		private final RuleCall cCurrentPagePageEStringParserRuleCall_2_0_1 = (RuleCall)cCurrentPagePageCrossReference_2_0.eContents().get(1);
		
		//CloseButton returns CloseButton:
		//    'CloseButton' label=EString currentPage=[Page|EString]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'CloseButton' label=EString currentPage=[Page|EString]
		public Group getGroup() { return cGroup; }
		
		//'CloseButton'
		public Keyword getCloseButtonKeyword_0() { return cCloseButtonKeyword_0; }
		
		//label=EString
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }
		
		//EString
		public RuleCall getLabelEStringParserRuleCall_1_0() { return cLabelEStringParserRuleCall_1_0; }
		
		//currentPage=[Page|EString]
		public Assignment getCurrentPageAssignment_2() { return cCurrentPageAssignment_2; }
		
		//[Page|EString]
		public CrossReference getCurrentPagePageCrossReference_2_0() { return cCurrentPagePageCrossReference_2_0; }
		
		//EString
		public RuleCall getCurrentPagePageEStringParserRuleCall_2_0_1() { return cCurrentPagePageEStringParserRuleCall_2_0_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wizards.Wizard.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	
	private final WizardElements pWizard;
	private final EStringElements pEString;
	private final PageElements pPage;
	private final TextFieldElements pTextField;
	private final CheckBoxElements pCheckBox;
	private final ReturnButtonElements pReturnButton;
	private final NavigatorButtonElements pNavigatorButton;
	private final PopUpButtonElements pPopUpButton;
	private final CloseButtonElements pCloseButton;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public WizardGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pWizard = new WizardElements();
		this.pEString = new EStringElements();
		this.pPage = new PageElements();
		this.pTextField = new TextFieldElements();
		this.pCheckBox = new CheckBoxElements();
		this.pReturnButton = new ReturnButtonElements();
		this.pNavigatorButton = new NavigatorButtonElements();
		this.pPopUpButton = new PopUpButtonElements();
		this.pCloseButton = new CloseButtonElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("wizards.Wizard".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Wizard returns Wizard: {Wizard}
	//    title=EString
	//    initial_page=[Page|EString]
	//    'Pages:' (pages+=Page ("," pages+=Page)*)?
	//;
	public WizardElements getWizardAccess() {
		return pWizard;
	}
	
	public ParserRule getWizardRule() {
		return getWizardAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Page returns Page:
	//    name=EString
	//    '{'
	//        (checkBox=CheckBox)?
	//        ('{' textFields+=TextField ("," textFields+=TextField)* '}')?
	//        ('{' returnButtons+=ReturnButton ("," returnButtons+=ReturnButton)* '}')?
	//        ('{' navigatorButtons+=NavigatorButton ("," navigatorButtons+=NavigatorButton)* '}')?
	//        ('{' popUpButtons+=PopUpButton ("," popUpButtons+=PopUpButton)* '}')?
	//        ('{' closeButtons+=CloseButton ("," closeButtons+=CloseButton)* '}')?
	//    '}'
	//;
	public PageElements getPageAccess() {
		return pPage;
	}
	
	public ParserRule getPageRule() {
		return getPageAccess().getRule();
	}
	
	//TextField returns TextField:
	//    'TextField' label=EString (min_length=EInt)? (max_length=EInt)?
	//;
	public TextFieldElements getTextFieldAccess() {
		return pTextField;
	}
	
	public ParserRule getTextFieldRule() {
		return getTextFieldAccess().getRule();
	}
	
	//CheckBox returns CheckBox:
	//    'CheckBox' selected=EBoolean label=EString
	//;
	public CheckBoxElements getCheckBoxAccess() {
		return pCheckBox;
	}
	
	public ParserRule getCheckBoxRule() {
		return getCheckBoxAccess().getRule();
	}
	
	//ReturnButton returns ReturnButton:
	//    'ReturnButton' label=EString currentPage=[Page|EString] srcPage=[Page|EString]
	//;
	public ReturnButtonElements getReturnButtonAccess() {
		return pReturnButton;
	}
	
	public ParserRule getReturnButtonRule() {
		return getReturnButtonAccess().getRule();
	}
	
	//NavigatorButton returns NavigatorButton:
	//    'NavigatorButton' label=EString currentPage=[Page|EString] dstPage=[Page|EString] (alterDstPage=[Page|EString])?
	//;
	public NavigatorButtonElements getNavigatorButtonAccess() {
		return pNavigatorButton;
	}
	
	public ParserRule getNavigatorButtonRule() {
		return getNavigatorButtonAccess().getRule();
	}
	
	//PopUpButton returns PopUpButton:
	//    'PopUpButton' label=EString popUp=EString currentPage=[Page|EString]
	//;
	public PopUpButtonElements getPopUpButtonAccess() {
		return pPopUpButton;
	}
	
	public ParserRule getPopUpButtonRule() {
		return getPopUpButtonAccess().getRule();
	}
	
	//CloseButton returns CloseButton:
	//    'CloseButton' label=EString currentPage=[Page|EString]
	//;
	public CloseButtonElements getCloseButtonAccess() {
		return pCloseButton;
	}
	
	public ParserRule getCloseButtonRule() {
		return getCloseButtonAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
